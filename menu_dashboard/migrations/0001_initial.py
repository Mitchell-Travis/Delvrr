# Generated by Django 5.1.3 on 2025-04-30 04:01

import django.db.models.deletion
import django.utils.timezone
import menu_dashboard.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('emoji', models.CharField(blank=True, max_length=5, null=True)),
                ('order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_pic', models.ImageField(blank=True, default=menu_dashboard.models.default_profile_pic, null=True, upload_to='profile_pic/CustomerProfilePic/')),
                ('mobile', models.CharField(max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=40)),
                ('feedback', models.CharField(max_length=500)),
                ('date', models.DateField(auto_now_add=True, db_index=True, null=True)),
            ],
            options={
                'indexes': [models.Index(fields=['name', 'date'], name='menu_dashbo_name_307485_idx')],
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant_name', models.CharField(blank=True, db_index=True, max_length=40, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('hashed_slug', models.CharField(blank=True, max_length=64, unique=True)),
                ('logo_pic', models.ImageField(blank=True, null=True, upload_to='logo_pic/RestaurantLogo/')),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('mobile', models.CharField(max_length=20)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('business_hours', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=40)),
                ('product_image', models.ImageField(blank=True, null=True, upload_to='product_image/')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('description', models.CharField(blank=True, max_length=200, null=True)),
                ('subcategory', models.CharField(blank=True, max_length=50, null=True)),
                ('pub_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Available', 'Available'), ('Unavailable', 'Unavailable')], db_index=True, default='Available', max_length=20)),
                ('has_promo', models.BooleanField(default=False)),
                ('promo_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('promo_start_date', models.DateField(blank=True, null=True)),
                ('promo_end_date', models.DateField(blank=True, null=True)),
                ('promo_discription', models.CharField(blank=True, max_length=200, null=True)),
                ('has_variations', models.BooleanField(default=False)),
                ('charge_gst', models.BooleanField(default=False, help_text='If True, 12% GST will be added.')),
                ('special_offer', models.CharField(blank=True, help_text="E.g., 'Limited Time Offer!' or '50% off on Wednesdays'", max_length=100, null=True)),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='For fixed pricing, this is the discount rate applied to the price.', max_digits=5, null=True)),
                ('price_by_percentage', models.BooleanField(default=False, help_text="If enabled, the product will display its price as a percentage (e.g., '50%').")),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='menu_dashboard.category')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='menu_dashboard.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_date', models.DateTimeField(auto_now_add=True, db_index=True, null=True)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Order Confirmed', 'Order Confirmed'), ('Cooking', 'Cooking'), ('Out for Delivery', 'Out for Delivery'), ('Delivered', 'Delivered')], db_index=True, default='Pending', max_length=50, null=True)),
                ('payment_method', models.CharField(choices=[('Cash on Delivery', 'Cash on Delivery'), ('Orange Money', 'Orange Money')], max_length=50, null=True)),
                ('table_number', models.IntegerField(null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='menu_dashboard.customer')),
                ('restaurant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='menu_dashboard.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('message', models.CharField(max_length=255)),
                ('button_text', models.CharField(blank=True, max_length=50, null=True)),
                ('button_url', models.URLField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('notification_type', models.CharField(choices=[('success', 'Success'), ('info', 'Information'), ('warning', 'Warning'), ('error', 'Error')], default='info', max_length=10)),
                ('send_to_all', models.BooleanField(default=False, help_text='If checked, this notification will be sent to all restaurants regardless of selection.')),
                ('restaurants', models.ManyToManyField(blank=True, help_text='Select specific restaurants to receive this notification. Leave empty to send to all restaurants.', related_name='notifications', to='menu_dashboard.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='MenuVisit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField()),
                ('device', models.CharField(blank=True, max_length=100, null=True)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='menu_visits', to='menu_dashboard.restaurant')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='restaurant',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='menu_dashboard.restaurant'),
        ),
        migrations.CreateModel(
            name='BrandColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color', models.CharField(help_text='Hex color code, e.g. #f7c028', max_length=7)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='brand_colors', to='menu_dashboard.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='Rider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mobile', models.CharField(max_length=20)),
                ('is_available', models.BooleanField(db_index=True, default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeliveryRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(db_index=True, default='Pending', max_length=50)),
                ('request_time', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='menu_dashboard.orders')),
                ('rider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='menu_dashboard.rider')),
            ],
        ),
        migrations.CreateModel(
            name='Table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('table_number', models.IntegerField(blank=True, db_index=True, null=True)),
                ('qrcode_image', models.ImageField(blank=True, upload_to='core/table_qrcodes')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='table', to='menu_dashboard.restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='UserCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(db_index=True, max_length=6, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TopUpRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('processed', models.BooleanField(db_index=True, default=False)),
                ('user_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menu_dashboard.usercode')),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_time', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('delivered', models.BooleanField(db_index=True, default=False)),
                ('delivery_feedback', models.CharField(blank=True, max_length=500, null=True)),
                ('delivery_request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='menu_dashboard.deliveryrequest')),
            ],
            options={
                'indexes': [models.Index(fields=['delivery_request', 'delivered'], name='menu_dashbo_deliver_8cc99d_idx')],
            },
        ),
        migrations.CreateModel(
            name='Earnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_charge', models.DecimalField(decimal_places=2, default=0.51, max_digits=10)),
                ('currency', models.CharField(default='LRD', max_length=3)),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='menu_dashboard.orders')),
            ],
            options={
                'indexes': [models.Index(fields=['order'], name='menu_dashbo_order_i_1dae21_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menu_dashboard.orders')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='menu_dashboard.product')),
            ],
            options={
                'indexes': [models.Index(fields=['order', 'product'], name='menu_dashbo_order_i_c33636_idx')],
            },
        ),
        migrations.CreateModel(
            name='ProductVariation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="E.g., 'S', 'M', 'L', 'F", max_length=50)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('is_default', models.BooleanField(default=False, help_text='Is this the default variation?')),
                ('has_promo', models.BooleanField(default=False)),
                ('promo_price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ('discount_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Set a percentage discount, e.g., 50 for 50% off', max_digits=5, null=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variations', to='menu_dashboard.product')),
            ],
            options={
                'ordering': ['product', '-is_default', 'name'],
                'unique_together': {('product', 'name')},
            },
        ),
        migrations.AddIndex(
            model_name='restaurant',
            index=models.Index(fields=['restaurant_name'], name='menu_dashbo_restaur_7ccfba_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['restaurant', 'category', 'status'], name='menu_dashbo_restaur_5e739c_idx'),
        ),
        migrations.AddIndex(
            model_name='orders',
            index=models.Index(fields=['customer', 'restaurant', 'status', 'order_date'], name='menu_dashbo_custome_64a537_idx'),
        ),
        migrations.AddIndex(
            model_name='customer',
            index=models.Index(fields=['user'], name='menu_dashbo_user_id_5770b8_idx'),
        ),
        migrations.AddIndex(
            model_name='deliveryrequest',
            index=models.Index(fields=['order', 'rider', 'status'], name='menu_dashbo_order_i_13045f_idx'),
        ),
        migrations.AddIndex(
            model_name='table',
            index=models.Index(fields=['restaurant', 'table_number'], name='menu_dashbo_restaur_b550b2_idx'),
        ),
        migrations.AddIndex(
            model_name='topuprequest',
            index=models.Index(fields=['user_code', 'processed', 'timestamp'], name='menu_dashbo_user_co_de3433_idx'),
        ),
        migrations.AddIndex(
            model_name='wallet',
            index=models.Index(fields=['user'], name='menu_dashbo_user_id_8a84bc_idx'),
        ),
    ]
